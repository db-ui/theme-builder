@use "@db-ui/foundations/build/scss/variables";
@use "@db-ui/foundations/build/scss/colors";

$selected-outline-height: 3px;

.show-borders {
  .drop-container,
  .drag-container {
    &:not(.selected):not(.hovered) {
      outline: 1px colors.$db-neutral-contrast-high dashed;
    }
  }
}

.show-spacings {
  :has(> .drop-container),
  :has(> .drag-container) {
    background-color: colors.$db-warning-bg-lvl-3;
  }

  .drop-container,
  .drag-container {
    --db-current-icon-color: #{colors.$db-current-color};
    background-image: linear-gradient(
        #{colors.$db-current-bg-color},
        #{colors.$db-current-bg-color}
      ),
      linear-gradient(
        #{colors.$db-successful-bg-lvl-3},
        #{colors.$db-successful-bg-lvl-3}
      );
    background-clip: content-box, padding-box;
    color: colors.$db-current-color;
  }
}

.drop-container,
.drag-container {
  & > div:empty,
  &:empty {
    min-height: variables.$db-sizing-md;
    min-width: variables.$db-sizing-md;
    width: 100%;
    height: 100%;
    display: flex;

    &::before {
      content: "Drag component to me";
      margin: auto;
    }
  }
}

[data-hint] {
  &::before {
    content: attr(data-hint);
    opacity: variables.$db-opacity-md;
  }
}

.drop-container {
  &:not(:empty) {
    display: contents;
  }
}

.hovered {
  outline: $selected-outline-height colors.$db-neutral-contrast-low dashed;
}

.selected {
  outline: $selected-outline-height colors.$db-informational-contrast-low solid;

  &:has(> .drag-button) {
    position: relative;

    &:hover {
      > .drag-button {
        opacity: 100;
      }
    }
  }
}

.drag-button {
  --db-current-icon-color: #{colors.$db-current-bg-color};
  --db-icon-margin-start: #{variables.$db-spacing-fixed-3xs};
  color: colors.$db-current-bg-color;
  background-color: colors.$db-informational-contrast-low;
  position: absolute;
  inset-block-end: 100%;
  inset-inline-end: calc(-1 * #{$selected-outline-height});
  opacity: 0;
  cursor: grab;
  width: max-content;

  &:active {
    cursor: grabbing;
  }
}

.tree-item {
  &:hover {
    background-color: colors.$db-current-bg-transparent-hover;
  }

  &:active {
    background-color: colors.$db-current-bg-transparent-pressed;
  }
}

.tree-item-padding {
  padding-inline-start: calc(
    #{variables.$db-sizing-md} - #{variables.$db-spacing-fixed-xs}
  );
}
